Binance API SPOT doc:
https://developers.binance.com/docs/binance-spot-api-docs/README



Binance API DERIV doc:
https://developers.binance.com/docs/derivatives/Introduction


ALGO de trading

- Considera que la resolucion de velas tal vez no es suficiente en H1. Validalo con el ejemplo del Lunes 19Agosto en BTC PERP.
- En realcion a lo anterior, tal vez vale la pena que la definicion de high y low se realice en un timeframe menor y no en H1 (m5?). Validado con el video de Mayne, el low y high del monday hacerlo con velas diarias, por algun motivo ahi ya no importa el timezone.
- Todo va a depende de a que dia corresponde la ultima vela del rango de lunes, es de Lunes o es de Martes?


======================================================================

NUEVA IDEA 1:
Hacer el market strenght detector similar al que tengo en Telegram.
Como incluyo el procesamiento con Django y la BD aqui?

======================================================================

NUEVA IDEA 2: 
Automatizar la tarea de Ansem y ponerla en una interfaz web.
"ANSEM instructions:

- Go thru top 200 alts by volume on binance
- Marca el low de Julio 5 y August 5
- Mira que coins estan haciendo higher LOWS en su par altbtc y atleth
- Toma las 20 del top de ROI desde el bottom
- Investiga FA en todas y escoge las top 5
"

Adicionales:
- Incluir la idea de la linea de regresion lineal que habla Scott Phillips. Revisar el video pero coge los 5 mejores coins de un basket total basado en la classificacion de fuerza de su par BTC (SOLBTC). La idea sería incluir e el dataframe resultante el analiss de par BTC de las monedas con mayor volumen en binance. 

PROMPT  inicial para Claude:

Escribe una función de Python llamada get_top_volume_coins_list(count=200) que use la API de Binance y retorne una lista de  200 (valor de count por defecto) cryptomonedas con mayor volumen diario promedio en los últimos 7 días. La lista a retornar deberá estar ordenada de mayor a menor volumen.
Adicionalmente crear una función llamada get_top_volume_coins_df(count=200) que haga lo mismo pero retorne un dataframe de pandas, con una columna "coin" y una columna "average volumen last 7 days", ordenada también de mayor a menor volumen.

PROMPT para obtener el low :

Escribe una funcion python reciba como argumento lo siguiente:
- Lista de nombres de cryptomonedas, nombre de variable "crypto_list".
- Periodo de lookback definido como dias, nombre de variable "loopback"
- Fecha de referencia para calculo de diferencia, nombre de variable "reference_low" que debe ser una fecha en el formato "DD-MM-YYYY"

La funcion debe obtener las velas diarias de SPOT  (no derivados o futuros) de los últimos "loopback" días de cada moneda. Estas velas deberan ser guardadas en un dataframe independiente para cada cryptomoneda, bajo el formato de nombre "{COIN}_DF_{LOOPBACK}"
Estos dataframes deben ser guardados como csv en una carpeta llamada "data" dentro de la carpeta raiz donde se corre el script.
La funcion finalmente debera retornar una lista de dataframes, uno para cada criiptomoneda.

Luego crear una funcion llamada create_db() que reciba como argumento la lista de cryptomonedas y cree una base de datos sqlite3 llamada "crypto_db.db"



PROMPT para analizar el pivot low:
Excelente. Ahora necesito que crees otra función llamada analyze_momentum(pivot_low_date, reference_high_date) que lea todos los archivos csv de la carpeta data y cree un único dataframe, donde cree una fila por cada moneda. pivot_low_date es una string que representa una fecha en el formato "DD-MM-YYYY". Crear las siguientes columnas que cumplan lo siguiente:
- pivot_low : Indica el "low" de la vela diaria con fecha de la variable argumento de la funcion "pivot_low_date" 
- max_high: Indica el "high" más alto de entre todas las velas diarias posterior a la fecha de la variable "pivot_low_date" 
- reference_high: Indica el "high" de la vela diaria con fecha de la variable argumento de la funcion "reference_high_date"
- change_pct: Indica el porcentaje de cambio entre el pivot_low y el reference_high

Finalmente, debera ordenar el dataframe por la columna "change_pct" de mayor a menor y retornar el dataframe ordenado.

=======================================================================

NUEVA IDEA 3

Aplicar la estrategia de protfolio rebalancing de Scott Phillips

[X]- Empiezo por escoger las 200 monedas con mayor volumen de Binance
[ ]- Obtenego la data de su valor comparado contra su par BTC, ej SOLBTC
[ ]- Ploteo en un spaggetti plot los valores de momentum de cada una de las monedas. Esto se muestra en la webapp.
[ ]- Escojo las 5 monedas con mayor momentum en el par BTC. Esto se hace calculando la regresion lineal y comparando la pendiente o slope de todas con su slope de la semana anterior.
[ ]- Muestro en la web las monedas que tengo esta semana
[ ]- Muestro en la web las monedas que tenia la semana anterior.
[ ]- Muestro en la web el contador de tiempo que queda para el siguiente rebalanceo (javascript?)
[ ]- Muestro en la web el portfolio en una pie chart?
[ ]- Muestro en la web el 




PROMPT para analziar la regresion lineal:


Tengo una carpeta con varios archivos .csv que son dataframes con datos de velas diarias de varias criptomonedas. el nombre de la criptomoneda esta en el nombre del archivo, por ejemplo este es uno de ellos: ETHBTC y el contenido es:

timestamp,open,high,low,close,volume
2024-09-02,0.04235,0.0434,0.04231,0.04291,21882.9779
2024-09-03,0.04291,0.04294,0.04204,0.04218,15037.3213
2024-09-04,0.04219,0.04274,0.04128,0.04226,31515.7841
2024-09-05,0.04226,0.04245,0.04181,0.04216,17020.4826
2024-09-06,0.04217,0.04258,0.04085,0.04123,46145.7447
2024-09-07,0.04124,0.04227,0.04123,0.04199,20385.5488
2024-09-08,0.04198,0.04229,0.04175,0.04186,18918.658


Escribe una funcion python que lea todos los archivos csv de la carpeta /data y retorne en un solo dataframe maestro el analisis mediante regresion lineal de la tasa de cambio. Los campos que debera tener son:

| coin    | return | intercept | slope |

| ------- | ------ | --------- | ----- |

| ETHBTC  |        |           |       |

| SOLBTC  |        |           |       |

| DOGEBTC |        |           |       |

donde:

return: indica el cambio porcentual entre el open de la primera vela y el close de la ultima.

intercept: Valor intercept resultado del analisis de la regresion linea

slope: Valor del slope de la regresion lineal

Finalmente, el dataframe debe estar ordenado de mayor a menor de acuerdo al slope.

=======================================================================
